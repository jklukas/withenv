#!/usr/bin/env bash
#
# Usage: withenv NAME ... -- [COMMAND]
#
# Load named files to customise the environment, then execute a command in
# that environment. With no COMMAND specified, just output the variable
# settings in Bourne-shell syntax.
#
# Each file should contain variable settings, one per line, in the form `VAR=value`.
#
# See https://github.com/mdub/withenv

: ${WITHENV_DIR=$HOME/.withenv}

declare -a env_files

find-file() {
  name="$1"
  for f in "$name" "$WITHENV_DIR/$name"; do
    if [ -f "$f" ]; then
      echo "$f"
      return
    fi
  done
  echo "withenv: No such file: $name" >&2
}

while [ $# -gt 0 ]; do
  arg="$1"; shift
  if [ "$arg" = '--' ]; then
    break
  fi
  env_files+=($(find-file "$arg"))
done

sanitize-vars() {
  # (borrowed from https://github.com/sstephenson/rbenv-vars)
  sed \
    -e "/^[ "$'\t'"]*[A-Za-z_][0-9A-Za-z_]*?\{0,1\}=/ !d" \
    -e "s/'/'\\\\''/g" \
    -e "s/\(\\\\\\\$\)/'\\1'/g" \
    -e "s/\\\\\\\\/\\\\/g" \
    -e "s/\(\\\$[0-9A-Za-z_][0-9A-Za-z_]*\)/'\\1'/g" \
    -e "s/\(\\\${[0-9A-Za-z_][0-9A-Za-z_]*}\)/'\\1'/g" \
    -e "s/^[ "$'\t'"]*\([A-Za-z_][0-9A-Za-z_]*?\{0,1\}\)=\(.*\)$/export \\1='\\2'/" \
    -e "s/export \([A-Za-z_][0-9A-Za-z_]*\)?=/[ -n \"\$\\1\" ] || export \\1=/g"
}

generate-env() {
  for f in ${env_files[@]}; do
    echo "# $f"
    sanitize-vars < "$f"
    echo
  done
}

if [ $# = 0 ]; then
  generate-env
else
  eval "$(generate-env)"
  exec "$@"
fi
